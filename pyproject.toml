[project]
name = "spiderexpress"
version = "0.2.0a0"
description = "A multipurpose spidery crawler for social media platforms"
authors = [
    {"name" = "Philipp Kessling", "email" = "<p.kessling@leibniz-hbi.de>"},
    {"name" = "Felix V. MÃ¼nch", "email" = "<f.muench@leibniz-hbi.de>"}
]
license = "MIT"
requires-python=">=3.10,<=3.13"
dependencies=[
    "pandas",
    "SQLAlchemy",
    "loguru",
    "numpy",
    "click",
    "psycopg2-binary",
    "PyYAML",
    "transitions",
    "pydantic"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "ipykernel",
    "pytest",
    "pytest-cov",
    "coverage",
    "pdoc3",
    "pre-commit",
    "isort",
    "ruff",
]
types = [
    "mypy",
    "pandas-stubs",
    "types-pyyaml",
]

[project.scripts]
spiderexpress = 'spiderexpress.cli:cli'

[project.entry-points."spiderexpress.connectors"]
csv = "spiderexpress.connectors.csv:csv"

[project.entry-points."spiderexpress.strategies"]
spikyball = "spiderexpress.strategies.spikyball:spikyball"
random = "spiderexpress.strategies.random:random"
snowball = "spiderexpress.strategies.snowball:snowball"

[tool.pytest.ini_options]
addopts = "--cov-report html:tests/coverage --cov=spiderexpress --capture=sys"

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 40

[tool.ruff.lint]
select = ["PL", "E", "F", "I", "DOC", "N"]
